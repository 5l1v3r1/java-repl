<?xml version="1.0" encoding="UTF-8"?>
<project>
    <property environment="env"/>
    <macrodef name="embed.libs">
        <attribute name="jar"/>
        <sequential>
            <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask"
                     classpathref="all.dependancies"/>
            <property name="release.no.libs.jar" value="${artifacts}/${release.name}-nolibs.jar"/>
            <jarjar jarfile="${release.no.libs.jar}" manifest="@{jar}.mf">
                <zipfileset src="${release.jar.path}"/>
                <zipgroupfileset dir="${packaged.dependencies.dir}" excludes="*-sources.jar" includes="*.jar"/>
                <rule pattern="com.googlecode.totallylazy.*" result="javarepl.internal.totallylazy.@1"/>
                <rule pattern="com.googlecode.totallylazy.**.*" result="javarepl.internal.totallylazy.@1.@2"/>

                <rule pattern="com.googlecode.funclate.*" result="javarepl.internal.funclate.@1"/>
                <rule pattern="com.googlecode.funclate.**.*" result="javarepl.internal.funclate.@1.@2"/>

                <rule pattern="com.googlecode.lazyparsec.*" result="javarepl.internal.lazyparsec.@1"/>
                <rule pattern="com.googlecode.lazyparsec.**.*" result="javarepl.internal.lazyparsec.@1.@2"/>

                <rule pattern="com.googlecode.utterlyidle.*" result="javarepl.internal.utterlyidle.@1"/>
                <rule pattern="com.googlecode.utterlyidle.**.*" result="javarepl.internal.utterlyidle.@1.@2"/>

                <rule pattern="com.googlecode.yadic.*" result="javarepl.internal.yadic.@1"/>
                <rule pattern="com.googlecode.yadic.**.*" result="javarepl.internal.yadic.@1.@2"/>

                <rule pattern="jline.**.*" result="javarepl.internal.jline.@1.@2"/>
                <rule pattern="jline.*" result="javarepl.internal.jline.@1"/>

                <rule pattern="org.fusesource.**.*" result="org.fusesource.@1.@2"/>
                <rule pattern="org.fusesource.*" result="org.fusesource.@1"/>

                <rule pattern="antlr.*" result="javarepl.internal.antlr.@1"/>

                <rule pattern="net.sf.cglib.*" result="javarepl.internal.net.sf.cglib.@1"/>
                <rule pattern="org.objenesis.*" result="javarepl.internal.org.objenesis.@1"/>
                <rule pattern="org.apache.commons.codec.*" result="javarepl.internal.org.apache.commons.codec.@1"/>
                <rule pattern="org.antlr.stringtemplate.*" result="javarepl.internal.org.antlr.stringtemplate.@1"/>
            </jarjar>
            <delete file="${release.jar.path}"/>
            <move file="${release.no.libs.jar}" tofile="${release.jar.path}"/>
        </sequential>
    </macrodef>

    <macrodef name="compile.and.jar">
        <attribute name="src"/>
        <attribute name="jar"/>
        <attribute name="classpathref"/>
        <attribute name="version"/>
        <attribute name="classes" default="@{jar}.classes"/>

        <sequential>
            <mkdir dir="@{classes}"/>
            <javac srcdir="@{src}" destdir="@{classes}" classpathref="@{classpathref}"
                   target="1.6" source="1.6" debug="true"
                   includeantruntime="false" encoding="UTF-8">
            </javac>
            <copy todir="@{classes}">
                <fileset dir="@{src}">
                    <exclude name="**/*.java"/>
                </fileset>
            </copy>

            <property name="manifest" value="@{jar}.mf"/>

            <manifest file="${manifest}">
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="javarepl.Main"/>
                <attribute name="Specification-Title" value="${ant.project.name}"/>
                <attribute name="Specification-Version" value="@{version}"/>
                <attribute name="Specification-Vendor" value="${ant.project.name}"/>
                <attribute name="Implementation-Title" value="${ant.project.name}"/>
                <attribute name="Implementation-Version" value="@{version}"/>
                <attribute name="Implementation-Vendor" value="${ant.project.name}"/>
            </manifest>

            <jar destfile="@{jar}" basedir="@{classes}" manifest="${manifest}"/>

            <delete dir="@{classes}"/>
        </sequential>
    </macrodef>

    <macrodef name="test">
        <attribute name="jar"/>
        <attribute name="reports"/>
        <attribute name="classpathref"/>

        <sequential>
            <mkdir dir="@{reports}"/>
            <property name="unzipped.jar" value="@{reports}.unzipped.jar"/>
            <mkdir dir="${unzipped.jar}"/>
            <unzip dest="${unzipped.jar}" src="@{jar}"/>
            <junit printsummary="no" fork="on" failureproperty="failed" forkmode="once">
                <sysproperty key="yatspec.output.dir" value="@{reports}"/>
                <sysproperty key="yatspec.index.enable" value="true"/>
                <!--<jvmarg value="-Xdebug"/>-->
                <!--<jvmarg value="-Xrunjdwp:transport=dt_socket,server=n,address=nurofen:5005,suspend=y"/>-->
                <classpath refid="@{classpathref}"/>
                <formatter type="xml"/>
                <batchtest todir="@{reports}">
                    <fileset dir="${unzipped.jar}">
                        <include name="**/*Test.class"/>
                        <exclude name="**/*$*"/>
                    </fileset>
                </batchtest>
            </junit>

            <delete dir="${unzipped.jar}"/>
            <fail message="Tests failed" if="failed"/>
        </sequential>
    </macrodef>


    <macrodef name="deploy-to-s3">
        <attribute name="key"/>
        <attribute name="secret"/>
        <attribute name="source"/>
        <attribute name="destination"/>

        <sequential>
            <exec executable="aws">
                <env key="AWS_ACCESS_KEY_ID" value="@{key}"/>
                <env key="AWS_SECRET_ACCESS_KEY" value="@{secret}"/>
                <arg value="s3"/>
                <arg value="cp"/>
                <arg value="@{source}"/>
                <arg value="@{destination}"/>
            </exec>
        </sequential>
    </macrodef>


    <macrodef name="push-to-docker-hub">
        <attribute name="username"/>
        <attribute name="password"/>
        <attribute name="repository"/>
        <attribute name="version"/>

        <sequential>
            <exec executable="bin/push-to-docker-hub.sh">
                <arg value="@{username}"/>
                <arg value="@{password}"/>
                <arg value="@{repository}"/>
                <arg value="@{version}"/>
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="deploy-to-s3-maven-repository">
        <attribute name="key"/>
        <attribute name="secret"/>
        <attribute name="source"/>
        <attribute name="destination"/>

        <sequential>
            <deploy-to-s3 key="@{key}" secret="@{secret}" source="@{source}" destination="@{destination}"/>

            <checksum file="@{source}" algorithm="sha1"/>
            <deploy-to-s3 key="@{key}" secret="@{secret}" source="@{source}.sha1" destination="@{destination}.sha1"/>

            <checksum file="@{source}" algorithm="md5"/>
            <deploy-to-s3 key="@{key}" secret="@{secret}" source="@{source}.md5" destination="@{destination}.md5"/>
        </sequential>
    </macrodef>

</project>
